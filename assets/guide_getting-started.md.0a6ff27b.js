import{_ as s,o as a,c as e,a as n}from"./chunks/framework.a6941a15.js";const D=JSON.parse('{"title":"\u5FEB\u901F\u5F00\u59CB","description":"","frontmatter":{},"headers":[],"relativePath":"guide/getting-started.md","lastUpdated":1667554869000}'),o={name:"guide/getting-started.md"},t=n(`<h1 id="\u5FEB\u901F\u5F00\u59CB" tabindex="-1">\u5FEB\u901F\u5F00\u59CB <a class="header-anchor" href="#\u5FEB\u901F\u5F00\u59CB" aria-hidden="true">#</a></h1><p>This section will help you build a basic VitePress documentation site from ground up. If you already have an existing project and would like to keep documentation inside the project, start from Step 2.</p><p>You can also try VitePress online on <a href="https://vitepress.new/" target="_blank" rel="noreferrer">StackBlitz</a>. It runs the VitePress-based site directly in the browser, so it is almost identical to the local setup but doesn&#39;t require installing anything on your machine.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>VitePress is currently in <code>alpha</code> status. It is already suitable for out-of-the-box documentation use, but the config and theming API may still change between minor releases.</p></div><h2 id="step-1-create-a-new-project" tabindex="-1">Step. 1: Create a new project <a class="header-anchor" href="#step-1-create-a-new-project" aria-hidden="true">#</a></h2><p>Create and change into a new directory.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ mkdir vitepress-starter </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> vitepress-starter</span></span>
<span class="line"></span></code></pre></div><p>Then, initialize with your preferred package manager.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ yarn init</span></span>
<span class="line"></span></code></pre></div><h2 id="step-2-install-vitepress" tabindex="-1">Step. 2: Install VitePress <a class="header-anchor" href="#step-2-install-vitepress" aria-hidden="true">#</a></h2><p>Add VitePress and Vue as dev dependencies for the project.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ yarn add --dev vitepress vue</span></span>
<span class="line"></span></code></pre></div><details class="details custom-block"><summary>Getting missing peer deps warnings?</summary><p><code>@docsearch/js</code> has certain issues with its peer dependencies. If you see some commands failing due to them, you can try this workaround for now:</p><p>If using PNPM, add this in your <code>package.json</code>:</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pnpm</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">peerDependencyRules</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">ignoreMissing</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">@algolia/client-search</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div></details><p>Create your first document.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ mkdir docs </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;"># Hello VitePress</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> docs/index.md</span></span>
<span class="line"></span></code></pre></div><h2 id="step-3-boot-up-dev-environment" tabindex="-1">Step. 3: Boot up dev environment <a class="header-anchor" href="#step-3-boot-up-dev-environment" aria-hidden="true">#</a></h2><p>Add some scripts to <code>package.json</code>.</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  ...</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">docs:dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vitepress dev docs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">docs:build</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vitepress build docs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">docs:serve</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vitepress serve docs</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>Serve the documentation site in the local server.</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">$ yarn docs:dev</span></span>
<span class="line"></span></code></pre></div><p>VitePress will start a hot-reloading development server at <code>http://localhost:5173</code>.</p><h2 id="step-4-add-more-pages" tabindex="-1">Step. 4: Add more pages <a class="header-anchor" href="#step-4-add-more-pages" aria-hidden="true">#</a></h2><p>Let&#39;s add another page to the site. Create a file name <code>getting-started.md</code> along with <code>index.md</code> you&#39;ve created in Step. 2. Now your directory structure should look like this.</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">.</span></span>
<span class="line"><span style="color:#A6ACCD;">\u251C\u2500 docs</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502  \u251C\u2500 getting-started.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2502  \u2514\u2500 index.md</span></span>
<span class="line"><span style="color:#A6ACCD;">\u2514\u2500 package.json</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>Then, try to access <code>http://localhost:5173/getting-started.html</code> and you should see the content of <code>getting-started.md</code> is shown.</p><p>This is how VitePress works basically. The directory structure corresponds with the URL path. You add files, and just try to access it.</p><h2 id="what-s-next" tabindex="-1">What&#39;s next? <a class="header-anchor" href="#what-s-next" aria-hidden="true">#</a></h2><p>By now, you should have a basic but functional VitePress documentation site. But currently, the user has no way to navigate around the site because it&#39;s missing for example sidebar menu we have on this site.</p><p>To enable those navigations, we must add some configurations to the site. Head to <a href="./configuration">configuration guide</a> to learn how to configure VitePress.</p><p>If you would like to know more about what you can do within the page, for example, writing markdown contents, or using Vue Component, check out the &quot;Writing&quot; section of the docs. <a href="./markdown">Markdown guide</a> would be a great starting point.</p><p>If you want to know how to customize how the site looks (Theme), and find out the features VitePress&#39;s default theme provides, visit <a href="./theme-introduction">Theme: Introduction</a>.</p><p>When your documentation site starts to take shape, be sure to read the <a href="./deploying">deployment guide</a>.</p>`,32),p=[t];function l(c,r,i,d,u,y){return a(),e("div",null,p)}const C=s(o,[["render",l]]);export{D as __pageData,C as default};
